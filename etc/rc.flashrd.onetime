#!/bin/sh

# This script will be run only the first time a system is booted

# PERMISSIONS:
# onetime.tgz AND ${hostname}.onetime.append.tgz files should have 0600
# permissions as they contain sensitive information.

# The onetime.tgz and ${hostname}.onetime.tgz files should have a structure like: 
#
# /
#	etc/
#		...
#	flash/
#		host1.example.com.onetime.tgz
#		host2.example.com.onetime.tgz
#		host3.example.com.onetime.tgz
#		host4.example.com.onetime.tgz
#		...
#		
#	tmp/
#		APPEND/
#			etc/
#			var/
#	usr/
#		...
#
# Each host-specific .tgz should have a similar structure
# 
# /
#	etc/
#		...
#		
#	tmp/
#		host1.example.com.onetime.tgz
#			APPEND/
#				etc/
#				var/
#		host2.example.com.onetime.tgz
#			APPEND/
#				etc/
#				var/
#		host3.example.com.onetime.tgz
#			...
#	usr/
#		...
#
# This way a whole set of files for a bunch of systems can be packaged up as a single
# onetime.tgz and placed into a single flashing file via the cfgflashrd script's -o option. 
# The correct host-specific files and scripts will be run via the setting of the host name
# in /etc/myname
#
# The structure can be set up and maintained by using the build_onetime script. 
#

onetime_reboot=0

# extract tar'd up files
# general and host specific

extractFiles() 
{
  if [ -f /flash/onetime.tgz ]; then
   tar xpzf /flash/onetime.tgz -C /
   echo flashrd: onetime extracted
   onetime_reboot=1
  fi
	
  if [ -f /flash/"${hostname}".onetime.tgz ]; then
   tar zxpf /flash/"${hostname}".onetime.tgz -C /
   echo flashrd: "${hostname}".onetime extracted
   onetime_reboot=1
  fi
}

# Appends text to files
# $1 contains the source directory
# $2 contains the target directory
appendOnDir()
{
 if [[ ! -d "${1}" ]]; then
  return
 fi
 ORIG_PATH=`pwd`
 cd "${1}"
 echo "In directory: " `/bin/pwd`
 FILE_LIST=`/usr/bin/find . -type f`

 for ONE_FILE in ${FILE_LIST}; do

  cat "${ONE_FILE}" >> "${2}/${ONE_FILE}"

 done

 cd "${ORIG_PATH}"
}

# walk the append tree
# anything that is in /tmp/APPEND will be appended
# then anything in /tmp/${hostname}/APPEND will be appended

appendToFiles()
{
 if [ -d /tmp/APPEND ]; then
  appendOnDir /tmp/APPEND /
  rm -rf /tmp/APPEND
  echo flashrd: onetime files appended
 fi

 if [ -d /tmp/"${hostname}"/APPEND ]; then
  appendOnDir /tmp/"${hostname}"/APPEND /
  rm -rf /tmp/"${hostname}"/APPEND
  echo flashrd: "${hostname}".onetime files appended
 fi
}


# Run scripts

runScripts() 
{
 # "DEPRECATED" since the root is really the ramdisk!
 # If flashrd.site got extracted here somehow, let's still use it.
 #
 if [ -e /flashrd.site ]; then
  . /flashrd.site
  echo flashrd: DEPRECATED ran /flashrd.site
  onetime_reboot=1
 fi

 # check for a overall script in /flash
 if [ -e /flash/flashrd.site ]; then
  . /flash/flashrd.site
  echo flashrd: ran /flash/flashrd.site
  onetime_reboot=1
 fi

 # next, check for a machine-specific script at in the /flash dir
 if [ -e /flash/"${hostname}".flashrd.site ]; then
  . /flash/"${hostname}".flashrd.site
  echo flashrd: ran /flash/"${hostname}".flashrd.site
  onetime_reboot=1
 fi
}


if [ ! -f /etc/.flashrd_onetime ]; then
 # reset system hostname from flash disk
 if [ -f /flash/etc/myname ]; then
  cp /flash/etc/myname /etc/myname
 fi
 hostname=`cat /etc/myname`

 extractFiles
 if [ "$onetime_reboot" == "1" ]; then
  appendToFiles
 fi
 runScripts

 touch /etc/.flashrd_onetime

 # sync /etc/master.passwd to pwd databases
 pwd_mkdb /etc/master.passwd

 # install packages in specified directory
 for one_package in /flash/PACKAGES/*.tgz; do
  [ -f $one_package ] && pkg_add ${one_package}
 done

 if [ "$onetime_reboot" == "1" ]; then
  # clean up onetime.tgz and host-specific .tgz files in /flash
  # IMPORTANT, since these contain configs for ALL hosts
  rm -f /flash/*.onetime.tgz
  rm -f /flash/onetime.tgz

  echo rebooting
  sync; sync
  reboot
 fi
fi

